"0","dtest <- xgb.DMatrix(data = x_test, label = y_test) "
"0",""
"0","# predict soft probabilities"
"0","pred_probs_test <- predict(final_model, dtest, reshape = TRUE)"
"0","colnames(pred_probs_test) <- as.character(class_labels)"
"0",""
"0","thresholded_preds_test <- sapply(class_labels, function(cls) {"
"0","  probs <- pred_probs_test[, as.character(cls)]"
"0","  as.integer(probs >= best_thresholds[as.character(cls)])"
"0","})"
"0",""
"0","pred_classes_test <- apply(thresholded_preds_test, 1, function(row) {"
"0","  if (sum(row) == 0) {"
"0","    return(NA)  # no threshold met"
"0","  } else if (sum(row) == 1) {"
"0","    return(which(row == 1) - 1)"
"0","  } else {"
"0","    return(which.max(pred_probs_test[row == 1, ][1, ]) - 1)"
"0","  }"
"0","})"
"0",""
"0","na_indices <- is.na(pred_classes_test)"
"0","if (any(na_indices)) {"
"0","  fallback_preds <- max.col(pred_probs_test[na_indices, ]) - 1"
"0","  pred_classes_test[na_indices] <- fallback_preds"
"0","}"
"0",""
"0",""
