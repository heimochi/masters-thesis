"0","# thresholds per class using Youden's J statistic"
"0","tune_thresholds <- function(pred_probs, y_calib) {"
"0","  sapply(class_labels, function(cls) {"
"0","    # Set threshold search range per class"
"0","    if (cls == ""0"") {"
"0","      thresholds <- seq(0.80, 1.00, by = 0.01)  # stricter range for class 0"
"0","    } else {"
"0","      thresholds <- seq(0.00, 1.00, by = 0.01)  # full range for class 1 and 2"
"0","    }"
"0",""
"0","    y_true_bin <- as.integer(y_calib == cls)"
"0","    probs <- pred_probs[, as.character(cls)]"
"0","    "
"0","    youden_scores <- sapply(thresholds, function(t) {"
"0","      preds <- as.integer(probs >= t)"
"0","      "
"0","      # Confusion matrix components"
"0","      tp <- sum(preds == 1 & y_true_bin == 1)"
"0","      tn <- sum(preds == 0 & y_true_bin == 0)"
"0","      fp <- sum(preds == 1 & y_true_bin == 0)"
"0","      fn <- sum(preds == 0 & y_true_bin == 1)"
"0","      "
"0","      sensitivity <- if ((tp + fn) > 0) tp / (tp + fn) else 0"
"0","      specificity <- if ((tn + fp) > 0) tn / (tn + fp) else 0"
"0","      "
"0","      # Youden's J"
"0","      youden_j <- sensitivity + specificity - 1"
"0","      return(youden_j)"
"0","    })"
"0","    "
"0","    thresholds[which.max(youden_scores)]"
"0","  })"
"0","}"
"0",""
"0",""
"0","# Calibrate thresholds"
"0","best_thresholds <- tune_thresholds(pred_probs_calib, y_calib)"
"0","print(best_thresholds)"
"1","[1]"
"1"," 0.83"
"1"," 0.02"
"1"," 0.02"
"1","
"
