"0","library(xgboost)"
"0","library(caret)"
"0",""
"0","# Create test DMatrix"
"0","dtest <- xgb.DMatrix(data = x_test, label = y_test)"
"0",""
"0","# Set default parameters (no tuning)"
"0","default_params <- list("
"0","  booster = ""gbtree"","
"0","  objective = ""multi:softprob"","
"0","  eval_metric = ""mlogloss"","
"0","  num_class = length(class_labels)"
"0",")"
"0",""
"0","# Train the default model"
"0","default_model <- xgb.train("
"0","  params = default_params,"
"0","  data = dtrain,"
"0","  nrounds = 50,  # or adjust if you want to test with more trees"
"0","  verbose = 0"
"0",")"
"0",""
"0","# Predict class probabilities on test set"
"0","pred_probs <- predict(default_model, x_test)"
"0",""
"0","# Reshape prediction output and get predicted labels"
"0","pred_matrix <- matrix(pred_probs, nrow = length(class_labels), byrow = TRUE)"
"0","y_pred <- max.col(t(pred_matrix)) - 1  # adjust for 0-indexing"
"0",""
"0","# Generate confusion matrix"
"0","conf_matrix <- confusionMatrix("
"0","  factor(y_pred, levels = class_labels),"
"0","  factor(y_test, levels = class_labels)"
"0",")"
"0",""
"0","# Print full confusion matrix and metrics"
"0","print(conf_matrix)"
"1","Confusion Matrix and Statistics

"
"1","          Reference
"
"1","Prediction"
"1","   0"
"1","   1"
"1","   2"
"1","
         0"
"1"," 301"
"1","  19"
"1","   8"
"1","
         1"
"1"," 318"
"1","  12"
"1","   6"
"1","
         2"
"1"," 284"
"1","  11"
"1","  10"
"1","
"
"1","
Overall Statistics
"
"1",""
"1","                         "
"1","                "
"1","
"
"1","               Accuracy :"
"1"," 0.3333         "
"1","
"
"1","                 95% CI :"
"1"," (0.3037, 0.364)"
"1","
"
"1","    No Information Rate :"
"1"," 0.9319         "
"1","
"
"1","    P-Value [Acc > NIR] :"
"1"," 1              "
"1","
"
"1","                         "
"1","                "
"1","
"
"1","                  Kappa :"
"1"," -0.0074        "
"1","
"
"1","                         "
"1","                "
"1","
"
"1"," Mcnemar's Test P-Value :"
"1"," <2e-16         "
"1","
"
"1","
Statistics by Class:

"
"1","                    "
"1"," Class: 0"
"1"," Class: 1"
"1"," Class: 2"
"1","
Sensitivity         "
"1","  0.33333"
"1","  0.28571"
"1","  0.41667"
"1","
Specificity         "
"1","  0.59091"
"1","  0.65049"
"1","  0.68783"
"1","
Pos Pred Value      "
"1","  0.91768"
"1","  0.03571"
"1","  0.03279"
"1","
Neg Pred Value      "
"1","  0.06084"
"1","  0.95261"
"1","  0.97892"
"1","
Prevalence          "
"1","  0.93189"
"1","  0.04334"
"1","  0.02477"
"1","
Detection Rate      "
"1","  0.31063"
"1","  0.01238"
"1","  0.01032"
"1","
Detection Prevalence"
"1","  0.33849"
"1","  0.34675"
"1","  0.31476"
"1","
Balanced Accuracy   "
"1","  0.46212"
"1","  0.46810"
"1","  0.55225"
"1","
"
