"0","#highly imbalanced data"
"0","balanced_data <- ROSE(ksads_11_917_p ~ ., data = train_data, seed = 123)$data"
"0",""
"0","# model matrix no intercepts "
"0","x_train <- model.matrix(ksads_11_917_p ~ ., balanced_data)[, -1]"
"0","x_test <- model.matrix(ksads_11_917_p ~ ., test_data)[, -1]"
"0",""
"0","dtrain <- xgb.DMatrix(data = x_train, label = as.numeric(balanced_data$ksads_11_917_p) - 1)"
"0","dtest <- xgb.DMatrix(data = x_test, label = as.numeric(test_data$ksads_11_917_p) - 1)"
"0",""
"0",""
"0","param_grid <- expand.grid("
"0","  nrounds = c(50),       "
"0","  max_depth = c(2, 7),        "
"0","  min_child_weight = c(1), "
"0","  gamma = c(0.1),          "
"0","  subsample = c(0.6 ),  "
"0","  colsample_bytree = c(0.6, 0.8) "
"0",") "
"0",""
"0","# Set up a tuning loop to evaluate each combination in the grid"
"0","best_auc <- -Inf"
"0","best_params <- NULL"
"0","best_nrounds <- NULL "
"0",""
"0","results_df <- data.frame()"
"0",""
"0","for (i in 1:nrow(param_grid)) {"
"0","  params <- list("
"0","    booster = ""gbtree"","
"0","    objective = ""binary:logistic"","
"0","    eval_metric = ""auc"","
"0","    max_depth = param_grid$max_depth[i],"
"0","    min_child_weight = param_grid$min_child_weight[i],"
"0","    eta = 0.1,"
"0","    gamma = param_grid$gamma[i],"
"0","    subsample = param_grid$subsample[i],"
"0","    colsample_bytree = param_grid$colsample_bytree[i],"
"0","    scale_pos_weight = 4688 / 321,"
"0","    nthread = 1"
"0","  )"
"0","  "
"0","  cv_results <- xgb.cv("
"0","    params = params,"
"0","    data = dtrain,"
"0","    nfold = 5,"
"0","    nrounds = param_grid$nrounds[i],"
"0","    early_stopping_rounds = 10,"
"0","    verbose = 0"
"0","  )"
"0","  "
"0","  max_auc <- max(cv_results$evaluation_log$test_auc_mean)"
"0","  best_round <- which.max(cv_results$evaluation_log$test_auc_mean)  # Capture this too"
"0","  "
"0","  results_df <- rbind(results_df, data.frame("
"0","  max_depth = param_grid$max_depth[i],"
"0","  min_child_weight = param_grid$min_child_weight[i],"
"0","  gamma = param_grid$gamma[i],"
"0","  subsample = param_grid$subsample[i],"
"0","  colsample_bytree = param_grid$colsample_bytree[i],"
"0","  nrounds = param_grid$nrounds[i],"
"0","  auc = max_auc,"
"0","  best_round = best_round"
"0","))"
"0",""
"0","  if (max_auc > best_auc) {"
"0","    best_auc <- max_auc"
"0","    best_params <- params"
"0","    best_nrounds <- best_round  # Save the best number of rounds"
"0","  }"
"0",""
"0","  rm(cv_results)"
"0","  gc()"
"0","}"
"0",""
"0","# Output the best AUC and the corresponding parameters"
"0","cat(""Best AUC:"", best_auc, ""\n"")"
"1","Best AUC:"
"1"," "
"1","0.643078"
"1"," "
"1","
"
"0","cat(""Best Parameters:"", ""\n"")"
"1","Best Parameters:"
"1"," "
"1","
"
"0","print(best_params)"
"1","$booster
"
"1","[1]"
"1"," ""gbtree"""
"1","
"
"1","
"
"1","$objective
"
"1","[1]"
"1"," ""binary:logistic"""
"1","
"
"1","
"
"1","$eval_metric
"
"1","[1]"
"1"," ""auc"""
"1","
"
"1","
"
"1","$max_depth
"
"1","[1]"
"1"," 7"
"1","
"
"1","
"
"1","$min_child_weight
"
"1","[1]"
"1"," 1"
"1","
"
"1","
"
"1","$eta
"
"1","[1]"
"1"," 0.1"
"1","
"
"1","
"
"1","$gamma
"
"1","[1]"
"1"," 0.1"
"1","
"
"1","
"
"1","$subsample
"
"1","[1]"
"1"," 0.6"
"1","
"
"1","
"
"1","$colsample_bytree
"
"1","[1]"
"1"," 0.8"
"1","
"
"1","
"
"1","$scale_pos_weight
"
"1","[1]"
"1"," 14.60436"
"1","
"
"1","
"
"1","$nthread
"
"1","[1]"
"1"," 1"
"1","
"
"1","
"
"0","cat(""Best nrounds:"", best_nrounds, ""\n"")"
"1","Best nrounds:"
"1"," "
"1","48"
"1"," "
"1","
"
"0","# Save results to CSV"
"0","write.csv(results_df, ""ksads_hyperparameter_tuning_results.csv"", row.names = FALSE)"
"0",""
"0",""
