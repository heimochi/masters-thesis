---
title: "OCS scores"
author: "MochiBear.Hei"
date: "12.16.2024"
format:
  html:
    toc: true
    toc-location: left
    embed-resources: true
    page-layout: full
    html-math-method: katex
editor: source
---

```{css, echo = F}
body{
  font-family: Helvetica;
  font-size: 16pt;
  max-width: 1000px;
  margin: auto;
  margin-left:310px;
}
pre{
  font-size: 14px;
}
/* Headers */
h1{
    font-size: 24pt;
  }
h1,h2{
    font-size: 20pt;
  }
h3,h4,h5,h6{
  font-size: 18pt;
}
#TOC {
  position: fixed;
  left: 0;
  top: 0;
  width: 300px;
  height: 100%;
  overflow:auto;
}
```


```{r setup,suppressPackageStartupMessages= TRUE}
#| include: false
#| message: false
#| warning: false
#| results: hide
knitr::opts_chunk$set(echo = TRUE, dpi = 300)

# Data manipulation
library(dplyr)
library(tidyr)
library(tidyverse)


# Plotting
library(ggplot2)

# Utilities
library(knitr)
```


```{r}
ocs <- read.csv("/Users/maggieheimvik/Desktop/LCBC/Data/ABCD/core/mental-health/mh_p_cbcl.csv")
#print(summary(p_data))

unique(ocs$eventname)
#how many?
unique_count <- length(unique(ocs$src_subject_id))
cat("Number of unique src_subject_id:", unique_count, "\n")

count_per_event <- table(ocs$eventname)
print(count_per_event)

#print(colnames(p_data))
```
Keep the relevant time points and items
```{r}
ocs <- ocs %>%
  filter(eventname == "2_year_follow_up_y_arm_1")

#using 8-item OCS scale because item 99 was removed from the 2001 revision of the CBCL (too concerned with cleanliness or neatness)
ocs <- ocs %>%
  select(
    src_subject_id,
    cbcl_q09_p, # Can't get their mind off certain thoughts; obsessions
    cbcl_q31_p, # Fears they might think or do something bad
    cbcl_q32_p, # Feels they have to be perfect
    cbcl_q52_p, # Feels too guilty 
    cbcl_q66_p, # Repeats certain acts over and over; compulsions 
    cbcl_q84_p, # Strange behavior 
    cbcl_q85_p, # Strange ideas 
    cbcl_q112_p #Worries
  )
    
```

# Calculate OCS score (Obsessive-Compulsive score)
```{r}
# Calculate the OCS score for each participant
p_data <- p_data %>%
  rowwise() %>%  # Ensures calculations are done row-by-row
  mutate(
    raw_score = sum(c_across(c(cbcl_q09_p, cbcl_q31_p, cbcl_q32_p, cbcl_q52_p, cbcl_q66_p, cbcl_q84_p, cbcl_q85_p, cbcl_q112_p)), na.rm = TRUE),  # Sum of scores for the 8 items
    max_possible_score = sum(!is.na(c_across(c(cbcl_q09_p, cbcl_q31_p, cbcl_q32_p, cbcl_q52_p, cbcl_q66_p, cbcl_q84_p, cbcl_q85_p, cbcl_q112_p)))) * 2,  # Maximum score based on answered items
    ocs_score = raw_score / max_possible_score  # Normalized OCS score
  ) %>%
  ungroup()  # Removes rowwise grouping

# View the resulting DataFrame with raw scores, max possible scores, and normalized OCS scores
print(p_data)

```

#merge diagnosis label
```{r}
diagnosis <- read.csv("/Users/maggieheimvik/Desktop/LCBC/Data/ABCD/OCD/diagnosis.csv")

# Select only the specified columns
diagnosis <- diagnosis %>%
  select(src_subject_id, 
         ksads_11_917_p) #present diagnosis OCD F42
         
## Demographic variables: sex, gender, ethnicity, age + diagnosis
ocs <- ocs %>%
  left_join(diagnosis, by = "src_subject_id")
```

```{r}
#how many in the full sample?
# Calculate the total number of unique src_subject_id
total_unique_subjects <- ocs %>%
  summarise(total_unique_subjects = n_distinct(src_subject_id)) %>%
  pull(total_unique_subjects)

# Display the result
cat("Total number of unique src_subject_id:", total_unique_subjects, "\n")


## how many with no ocd
# Calculate the total number of people with OCD absent
total_ocd_absent <- ocs %>%
  filter(ksads_11_917_p != 1) %>% # Filter for cases where OCD is absent
  summarise(total_ocd_absent = n_distinct(src_subject_id)) %>%
  pull(total_ocd_absent)
# Display the result
cat("Total number of people with OCD absent:", total_ocd_absent, "\n")

## how many with ocd
# Calculate the total number of people with OCD absent
total_ocd_present <- ocs %>%
  filter(ksads_11_917_p == 1) %>% # Filter for cases where OCD is absent
  summarise(total_ocd_present = n_distinct(src_subject_id)) %>%
  pull(total_ocd_present)
# Display the result
cat("Total number of people with OCD present:", total_ocd_present, "\n")
```

```{r}

# Define the given totals
total_full_sample <- 10898
total_ocd_present <- 660
total_ocd_absent <- 10048

# List of CBCL items
cbcl_items <- c("cbcl_q09_p", "cbcl_q31_p", "cbcl_q32_p", "cbcl_q52_p", 
                "cbcl_q66_p", "cbcl_q84_p", "cbcl_q85_p", "cbcl_q112_p")


# Function to calculate score counts for all samples
calculate_score_counts <- function(data, sample_total) {
  data %>%
    pivot_longer(
      cols = all_of(cbcl_items),
      names_to = "cbcl_item",
      values_to = "score"
    ) %>%
    group_by(cbcl_item, score) %>%
    summarise(count = n(), .groups = "drop") %>%
    mutate(percentage = (count / sample_total) * 100)
}

# Full sample counts
full_sample_counts <- calculate_score_counts(ocs, total_full_sample)
print("Full Sample Counts:")
print(full_sample_counts)

# OCD-present sample counts
ocd_present_counts <- ocs %>%
  filter(ksads_11_917_p == 1) %>%  # Filter for OCD present
  calculate_score_counts(total_ocd_present)
print("OCD Present Counts:")
print(ocd_present_counts)


# OCD-absent sample counts
ocd_absent_counts <- ocs %>%
  filter(ksads_11_917_p != 1) %>%  # Filter for OCD absent 
  calculate_score_counts(total_ocd_absent)
print("OCD Absent Counts:")
print(ocd_absent_counts)

```

```{r}
# Calculate the CBCL OCS sum for each participant
ocs <- ocs %>%
  rowwise() %>%
  mutate(cbcl_ocs_sum = sum(c_across(all_of(cbcl_items)), na.rm = TRUE)) %>%
  ungroup()

# Assuming there's a function or formula to calculate the t-score, this is a placeholder
# You need to replace `calculate_t_score` with the actual function or logic.
calculate_t_score <- function(score) {
  # Placeholder logic for T-score calculation, replace with actual if available
  return(score * 1.5 + 50) 
}

ocs <- ocs %>%
  mutate(cbcl_ocs_t_score = calculate_t_score(cbcl_ocs_sum))

# Function to summarize scores
summarize_scores <- function(data, total) {
  data %>%
    summarize(
      score_gt_0 = sum(cbcl_ocs_sum > 0),
      score_gt_1 = sum(cbcl_ocs_sum > 1),
      score_ge_5 = sum(cbcl_ocs_sum >= 5),
      mean_ocs_sum = mean(cbcl_ocs_sum),
      mean_t_score = mean(cbcl_ocs_t_score),
      percent_gt_0 = (score_gt_0 / total) * 100,
      percent_gt_1 = (score_gt_1 / total) * 100,
      percent_ge_5 = (score_ge_5 / total) * 100
    )
}

# Full sample scores
full_sample_summary <- summarize_scores(ocs, total_full_sample)
print("Full Sample Summary:")
print(full_sample_summary)

# OCD-present sample scores
ocd_present_summary <- ocs %>%
  filter(ksads_11_917_p == 1) %>%
  summarize_scores(total_ocd_present)
print("OCD Present Sample Summary:")
print(ocd_present_summary)

# OCD-absent sample scores
ocd_absent_summary <- ocs %>%
  filter(ksads_11_917_p != 1) %>%
  summarize_scores(total_ocd_absent)
print("OCD Absent Sample Summary:")
print(ocd_absent_summary)

```


```{r}

```


```{r}

```


